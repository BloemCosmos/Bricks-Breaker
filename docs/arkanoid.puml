@startuml Arkanoid

class Jugador {
  + Jugador(RenderWindow& ventana)
  + moverDerecha()
  + moverIzquierda()
  + dibujar(RenderWindow& ventana)
  + escalarPaleta()
  + restaurarEscala()
  + getPosition() : FloatRect
  - paleta : RectangleShape
}

class Puntuaje {
  - puntuacion: int
  - textoPuntuacion: sf::Text
  - fuente: sf::Font
  + Puntuaje()
  + incrementarPuntuacion(puntos: int)
  + reiniciarPuntuacion()
  + draw(window: RenderWindow&)
}

class Ladrillo {
  + Ladrillo()
  + inicializar(float x, float y, bool estado, Color color)
  + colision(FloatRect pelotaPos) : bool
  + dibujar(RenderWindow& ventana)
  + getPosition() : Vector2f
  - bloque : RectangleShape
  - estado : bool
}

class Pelota {
  + Pelota(RenderWindow& ventana)
  + mover()
  + rebotar()
  + dibujar(RenderWindow& ventana)
  + getPosition() : FloatRect
  + cambiarDireccionX()
  + cambiarDireccionY()
  - pelota : CircleShape
  - velDirPelota : Vector2f
}

class Plataforma {
  + Plataforma()
  + inicializar(float x, float y)
  + mover()
  + dibujar(RenderWindow& ventana)
  + colision(FloatRect jugadorPos) : bool
  + getEstado() : bool
  + desactivar()
  - pastilla : RectangleShape
  - estado : bool
}

class Juego {
  + Iniciar()
  + EstaEjecutandose()
}

Jugador "1" *-- "1" Pelota
Jugador "1" o-- "1" Pelota
Jugador "1" o-- "0..1*" Bloque
Jugador "1" *-- Plataforma
Jugador "1" o-- "0..1" Plataforma
Jugador "1" *-- "0..1" Puntuaje

Juego "1" *-- "1" Jugador
Juego "1" *-- "0..1*" Bloque
Juego "1" *-- "1" Pelota
Juego "1" *-- "0..1" Plataforma
Juego "1" *-- "1" Puntuaje

Bloque "1" *-- "0..1" Puntuaje
Pelota "1" o-- "1" Bloque
Plataforma "1" o-- "1" Pelota

@enduml